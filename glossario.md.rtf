{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\fs24 \cf2 ## Software\
\
- "Computer programs and associated documentation. Software products may be developed for a particular customer or may be developed for a general market." [1]\
\
- "Software is sometimes called a program; software that is interacting with a human user is often called an application. Software controls computers or computer chips, implements algorithms, processes data, and so forth. These properties are essential because only software has these properties." [2]\
\
 - "Instructions (computer programs) that when executed provide desired features, function, and performance; (2) data structures that enable the programs to adequately manipulate information, and (3) descriptive information in both hard copy and virtual forms that describes the operation and use of the programs." [3]\
\
\
## Software Engineering\
\
- Software engineering is intended to support professional software development, rather than individual programming. It includes techniques that support program specification, design, and evolution, none of which are normally relevant for personal software development. [1]\
\
- Software engineering is an engineering discipline that is concerned with all aspects of software production from the early stages of system specification through to maintaining\
the system after it has gone into use. [2]\
\
- Software engineering encompasses a process, a collection of methods (practice) and an array of tools that allow professionals to build high-quality computer software. [3]\
\
\
## Waterfall model\
\
- A software process model that involves discrete development stages: specification, design, implementation, testing, and maintenance. In principle, one stage must be\
complete before progress to the next stage is possible. In practice, there is significant iteration between stages. [1]\
\
- \'93Waterfall\'94 originates from the one-directional flow of information, from requirements to design to implementation to maintenance. No information flows backwards, similar to a natural waterfall, where water flows in only one direction and no water flows backwards. [2]\
\
- Sometimes called the classic life cycle , suggests a systematic, sequential approach 2 to software development that begins with customer specification of requirements and progresses through planning, modeling, construction, and deployment, culminating in ongoing support of the completed software. [3]\
\
\
## UML (Unified Modeling Language)\
\
- A graphical language used in object-oriented development that includes several types of system models that provide different views of a system. The UML has become a de facto standard for object-oriented modeling. [1]\
\
- Standard language for writing software blueprints. UML may be used to visualize, specify, construct, and document the artifacts of a software-intensive system\'94. In other words, just as building architects create blueprints to be used by a construction company, software architects create UML diagrams to help software developers build the software. [3]\
\
- Linguagem de Modelagem Unificada \'e9 uma linguagem-padr\'e3o para a elabora\'e7\'e3o da estrutura de projetos de software. Ela poder\'e1 ser empregada para a visualiza\'e7\'e3o, a especifica\'e7\'e3o, a constru\'e7\'e3o e a documenta\'e7\'e3o de artefatos que fa\'e7am uso de sistemas complexos de software. Em outras palavras, na \'e1rea de Engenharia de Software, a **UML** \'e9 uma linguagem de modelagem que permite representar um sistema de forma padronizada (com intuito de facilitar a compreens\'e3o pr\'e9-implementa\'e7\'e3o). A **UML** \'e9 adequada para a modelagem de sistemas, cuja abrang\'eancia poder\'e1 incluir desde sistemas de informa\'e7\'e3o corporativos a serem distribu\'eddos a aplica\'e7\'f5es baseadas na Web e at\'e9 sistemas complexos embutidos de tempo real. \'c9 uma linguagem muito expressiva, abrangendo todas as vis\'f5es necess\'e1rias ao desenvolvimento e implanta\'e7\'e3o desses sistemas. [5]\
\
## Reengineering\
\
- The modification of a software system to make it easier to understand and change. Reengineering often involves software and data restructuring and organization, program simplification, and redocumentation. [1]\
\
- Process that reverses code decay and returns software to the stage of evolution, but it is an expensive and risky process. Hence, there is a large asymmetry between the code decay that can happen unnoticed and the reengineering effort that tries to reverse it. [2]\
\
- The examination and alteration of a system to reconstitute it in a new form"**. Less formally, reengineering is the modification of a software system that takes place after it has been reverse engineered, generally to add new functionality, or to correct errors. [6]\
\
### *References*\
\
1. Ian Sommerville, *Software Engineering*, Ninth Edition\
2. V\'e1clav Rajlich, *Software Engineering The Current Practice*\
3. Roger S. Pressman, Ph.D., Bruce R. Maxim, Ph.D., *Software Engineering, Apractitioner's Approach*, Eighth Edition\
4. Walt Scacchi, *Process Models in Software Engineering*, Revised Version, May 2001, October 2001\
5. Booch, G; Rumbaugh, J e Jacobson, I: *UML, Guia do Usu\'e1rio*, Tradu\'e7\'e3o: F\'e1bio Freitas da Silva, Rio de Janeiro, Campus , 2012.\
6. Chikofsky, E. and Cross, J., 1990. *Reverse Engineering and Design Recovery: A Taxonomy*. IEEE Software.}